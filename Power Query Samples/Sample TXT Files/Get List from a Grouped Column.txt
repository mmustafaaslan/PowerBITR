let
    Source = Json.Document(Web.Contents("https://api.ercdex.com/api/token-pairs/1")),
    #"Converted to Table1" = Table.FromList(Source, Splitter.SplitByNothing(), null, null, ExtraValues.Error),
    Token_AB = Table.ExpandRecordColumn(#"Converted to Table1", "Column1", {"tokenA", "tokenB"}, {"tokenA", "tokenB"}),
    #"Expanded tokenA" = Table.ExpandRecordColumn(Token_AB, "tokenA", {"address", "symbol", "name", "decimals"}, {"TokenA.address", "TokenA.symbol", "TokenA.name", "TokenA.decimals"}),
    #"Expanded tokenB" = Table.ExpandRecordColumn(#"Expanded tokenA", "tokenB", {"address", "symbol", "name"}, {"address", "symbol", "name"}),
    #"Filtered Rows" = Table.SelectRows(#"Expanded tokenB", each ([symbol] = "WETH")),
    #"Removed Columns" = Table.RemoveColumns(#"Filtered Rows",{"address", "symbol", "name"}),
    #"Invoked Custom Function" = Table.AddColumn(#"Removed Columns", "f_ErxDexOrderBuyBook", each f_ErxDexOrderBuyBook([TokenA.address])),
    #"Expanded f_ErxDexOrderBuyBook" = Table.ExpandTableColumn(#"Invoked Custom Function", "f_ErxDexOrderBuyBook", {"price", "volume"}, {"price", "volume"}),
    #"Added Custom" = Table.AddColumn(#"Expanded f_ErxDexOrderBuyBook", "Power", each Number.Power(10,[TokenA.decimals])),
    #"Inserted Division" = Table.AddColumn(#"Added Custom", "Quantity", each [volume] / [Power], type number),
    #"Added Custom5" = Table.AddColumn(#"Inserted Division", "ETHQuantity", each [price]*[Quantity]),
    #"Changed Type" = Table.TransformColumnTypes(#"Added Custom5",{{"ETHQuantity", type number}}),
    #"Removed Columns1" = Table.RemoveColumns(#"Changed Type",{"TokenA.decimals", "volume", "Power"}),
    #"Kept First Rows" = Table.FirstN(#"Removed Columns1",200),
    #"Filtered Rows1" = Table.SelectRows(#"Kept First Rows", each [ETHQuantity] >= 0.2),
    #"Removed Errors1" = Table.RemoveRowsWithErrors(#"Filtered Rows1"),
    #"Grouped Rows1" = Table.Group(#"Removed Errors1", {"TokenA.address", "TokenA.symbol", "TokenA.name"}, {{"Group", each _, type table}}),
    #"Added Custom1" = Table.AddColumn(#"Grouped Rows1", "PriceList", each Table.Column([Group],"price")),
    #"Added Custom2" = Table.AddColumn(#"Added Custom1", "ETHQuantityList", each Table.Column([Group],"ETHQuantity")),
    #"Added Custom3" = Table.AddColumn(#"Added Custom2", "Price", each List.FirstN([PriceList],1)),
    #"Added Custom4" = Table.AddColumn(#"Added Custom3", "ETHQuantity", each List.FirstN([ETHQuantityList],1)),
    #"Removed Columns2" = Table.RemoveColumns(#"Added Custom4",{"Group", "PriceList", "ETHQuantityList"}),
    #"Extracted Values" = Table.TransformColumns(#"Removed Columns2", {"Price", each Text.Combine(List.Transform(_, Text.From)), type text}),
    #"Extracted Values1" = Table.TransformColumns(#"Extracted Values", {"ETHQuantity", each Text.Combine(List.Transform(_, Text.From)), type text}),
    #"Changed Type1" = Table.TransformColumnTypes(#"Extracted Values1",{{"Price", type number}, {"ETHQuantity", type number}}),
    #"Added Custom6" = Table.AddColumn(#"Changed Type1", "ContractPairName", each "ETH_"&Text.Start([TokenA.address],9)),
    #"Merged Queries" = Table.NestedJoin(#"Added Custom6",{"ContractPairName"},ForkDeltaReturnTickerAsk,{"Name"},"ForkDeltaReturnTickerAsk",JoinKind.LeftOuter),
    #"Expanded ForkDeltaReturnTickerAsk" = Table.ExpandTableColumn(#"Merged Queries", "ForkDeltaReturnTickerAsk", {"ask"}, {"ask"}),
    #"Renamed Columns" = Table.RenameColumns(#"Expanded ForkDeltaReturnTickerAsk",{{"ask", "ForkDeltaAsk"}}),
    #"Removed Columns3" = Table.RemoveColumns(#"Renamed Columns",{"ContractPairName", "TokenA.address"})
in
    #"Removed Columns3"